plugins {
    id 'java'
    id 'application'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

application {
    mainClass = 'org.translator.Runner'
}

dependencies {
    // ProWide SWIFT ISO 20022 library for PACS message types
    implementation 'com.prowidesoftware:pw-iso20022:SRU2023-10.1.6'

    // Avro dependencies for POJO generation from canonicalBizView schema
    implementation 'org.apache.avro:avro:1.11.3'
    implementation 'org.apache.avro:avro-compiler:1.11.3'

    // JAXB dependencies for XML binding annotations
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.4'
    implementation 'org.glassfish.jaxb:jaxb-xjc:4.0.4'

    // MapStruct for annotation processing
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Logging dependencies
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.14'

    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Custom task to generate Java classes from XSD files
task generateXSDClasses(type: JavaExec) {
    description = 'Generate Java classes from XSD files'
    group = 'build'

    classpath = configurations.runtimeClasspath + configurations.compileClasspath
    mainClass = 'com.sun.tools.xjc.XJCFacade'

    args = [
        '-d', 'src/main/java',
        '-p', 'org.translator.xsd.generated.pacs_008',
        '../pacs.008.001.13.xsd'
    ]

    doFirst {
        file('src/main/java/org/translator/xsd/generated/pacs_008').mkdirs()
        file('src/main/java/org/translator/xsd/generated/pacs_009').mkdirs()
        file('src/main/java/org/translator/xsd/generated/pain_001').mkdirs()
    }
}

task generatePacs009Classes(type: JavaExec) {
    description = 'Generate Java classes from PACS 009 XSD file'
    group = 'build'

    classpath = configurations.runtimeClasspath + configurations.compileClasspath
    mainClass = 'com.sun.tools.xjc.XJCFacade'

    args = [
        '-d', 'src/main/java',
        '-p', 'org.translator.xsd.generated.pacs_009',
        '../pacs.009.001.12.xsd'
    ]
}

task generatePain001Classes(type: JavaExec) {
    description = 'Generate Java classes from PAIN 001 XSD file'
    group = 'build'

    classpath = configurations.runtimeClasspath + configurations.compileClasspath
    mainClass = 'com.sun.tools.xjc.XJCFacade'

    args = [
        '-d', 'src/main/java',
        '-p', 'org.translator.xsd.generated.pain_001',
        '../pain.001.001.12.xsd'
    ]
}

task generateAllXSDClasses {
    dependsOn generateXSDClasses, generatePacs009Classes, generatePain001Classes
    description = 'Generate all Java classes from XSD files'
    group = 'build'
}

compileJava.dependsOn generateAllXSDClasses

// Ensure Avro generation runs before compileJava
tasks.named('compileJava') {
    dependsOn tasks.named('generateAvroJava')
}

test {
    useJUnitPlatform()
}
