plugins {
    id 'java'
    id 'application'
}

group = 'org.translator'
version = '0.1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    
    implementation 'com.prowidesoftware:pw-iso20022:SRU2024-10.2.7'

    // Depend on generated model module (schema-generator) for PoC; in later iterations
    // consider moving generated sources into a dedicated module/artifact.
    implementation project(':schema-generator')

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    runtimeOnly 'org.glassfish.jaxb:jaxb-runtime:4.0.3'
}

test {
    useJUnitPlatform()
}

// Ensure annotation-processor generated sources are compiled and visible to IDEs
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/main")
}
sourceSets.main.java.srcDirs += "$buildDir/generated/sources/annotationProcessor/java/main"

application {
    // main class for `gradle :mapper-core:run`
    mainClass = 'org.translator.Runner'
}

// Utility task: generate an exhaustive mapping matrix CSV by reflecting over model classes
tasks.register('generateMappingMatrix', JavaExec) {
    group = 'tools'
    description = 'Generate exhaustive mapping matrix CSV for specified model classes'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('org.translator.tools.GenerateMappingMatrix')
    // default args: scan pacs.008 and pacs.009 Prowide classes and write to docs/mapping_matrix_exhaustive.csv
    args = ['com.prowidesoftware.swift.model.mx.dic.Pacs00800101','com.prowidesoftware.swift.model.mx.dic.Pacs00900101','docs/mapping_matrix_exhaustive.csv']
}
